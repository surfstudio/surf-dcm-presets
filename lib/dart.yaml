dart_code_metrics:
  rules:
    # https://dcm.dev/docs/rules/common
    - arguments-ordering:
        child-last: true
    - avoid-accessing-collections-by-constant-index
    - avoid-accessing-other-classes-private-members
    - avoid-async-call-in-sync-function
    - avoid-barrel-files
    - avoid-bottom-type-in-patterns
    - avoid-bottom-type-in-records
    # https://github.com/dart-lang/sdk/issues/45667
    - avoid-cascade-after-if-null
    - avoid-collapsible-if
    - avoid-collection-methods-with-unrelated-types
    - avoid-declaring-call-method
    - avoid-double-slash-imports
    - avoid-duplicate-cascades
    - avoid-duplicate-collection-elements
    - avoid-duplicate-exports
    - avoid-duplicate-initializers
    - avoid-duplicate-map-keys
    - avoid-duplicate-mixins
    - avoid-duplicate-named-imports
    - avoid-duplicate-patterns
    - avoid-duplicate-switch-case-conditions
    - avoid-duplicate-test-assertions
    - avoid-dynamic
    - avoid-equal-expressions
    - avoid-explicit-pattern-field-name
    - avoid-extensions-on-records
    - avoid-function-type-in-records
    - avoid-future-tostring
    - avoid-generics-shadowing
    - avoid-global-state
    - avoid-identical-exception-handling-blocks
    - avoid-inverted-boolean-checks
    - avoid-keywords-in-wildcard-pattern
    - avoid-local-functions
    - avoid-long-files:
        max-length: 500
    - avoid-long-functions:
        max-length: 80
        ignored-names:
          - build
    - avoid-long-parameter-list:
        ignore-optional: true
        max-amount: 5
        ignored-names:
          - copyWith
    - avoid-long-records:
        max-amount: 3
    # https://github.com/dart-lang/sdk/issues/52909
    - avoid-map-keys-contains
    - avoid-missed-calls
    - avoid-missing-enum-constant-in-map
    - avoid-missing-interpolation
    - avoid-misused-wildcard-pattern
    - avoid-mixing-named-and-positional-fields
    - avoid-mutating-parameters
    - avoid-negated-conditions
    - avoid-nested-conditional-expressions:
        acceptable-level: 2
    - avoid-nested-futures
    - avoid-nested-records
    - avoid-nested-streams-and-futures
    - avoid-nested-switch-expressions
    - avoid-nested-switches
    - avoid-non-null-assertion
    - avoid-nullable-interpolation
    - avoid-nullable-parameters-with-default-values
    - avoid-nullable-tostring
    - avoid-one-field-records
    - avoid-passing-async-when-sync-expected
    - avoid-passing-default-values
    - avoid-passing-self-as-argument
    - avoid-positional-record-field-access
    - avoid-recursive-calls
    - avoid-redundant-async
    - avoid-redundant-else
    - avoid-referencing-discarded-variables
    - avoid-self-assignment
    - avoid-self-compare
    - avoid-shadowed-extension-methods
    - avoid-shadowing
    - avoid-throw-in-catch-block
    - avoid-throw-objects-without-tostring
    - avoid-unassigned-late-fields
    - avoid-unassigned-stream-subscriptions
    - avoid-unconditional-break
    - avoid-unnecessary-conditionals
    - avoid-unnecessary-futures
    - avoid-unnecessary-if
    - avoid-unnecessary-local-late
    - avoid-unnecessary-negations
    - avoid-unnecessary-nullable-return-type
    - avoid-unnecessary-return
    - avoid-unnecessary-super
    - avoid-unsafe-collection-methods
    - avoid-unused-after-null-check
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format:
        explicit-trailing-zero: false
    - format-comment:
        only-doc-comments: true
    - function-always-returns-null
    - map-keys-ordering
    - match-positional-field-names-on-assignment
    - member-ordering:
        order:
          - public-fields
          - private-fields
          - public-getters
          - private-getters
          - public-setters
          - private-setters
          - constructors
          - close-method
          - dispose-method
          - public-methods
          - private-methods
        widgets-order:
          - constructor
          - named-constructor
          - const-fields
          - final-fields
          - init-state-method
          - did-change-dependencies-method
          - did-update-widget-method
          - dispose-method
          - private-methods
          - overriden-public-methods
          - build-method
    - move-records-to-typedefs:
        min-fields: 3
        min-occurences: 2
    - move-variable-closer-to-its-usage
    - move-variable-outside-iteration
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-conditions
    - no-equal-nested-conditions
    - no-equal-switch-case
    - no-equal-switch-expression-cases
    - no-equal-then-else
    - no-object-declaration
    - prefer-addition-subtraction-assignments
    - prefer-any-or-every
    - prefer-correct-callback-field-name:
        name-pattern: ^on[A-Z]+
    - prefer-correct-identifier-length:
        max-identifier-length: 30
        min-identifier-length: 2
    - prefer-correct-stream-return-type
    - prefer-declaring-const-constructor:
        ignore-abstract: true
    - prefer-early-return:
        ignore-if-case: true
    - prefer-explicit-function-type
    - prefer-explicit-type-arguments
    - prefer-immediate-return
    - prefer-match-file-name:
        exclude:
          - "test/**"
          - "lib/**/*wm.dart"
    - prefer-moving-to-variable:
        allowed-duplicated-chains: 3
    - prefer-named-boolean-parameters:
        ignore-single: true
        ignore-single-boolean: false
    - prefer-null-aware-spread
    - prefer-parentheses-with-if-null
    - prefer-public-exception-classes
    - prefer-return-await
    - prefer-simpler-patterns-null-check
    - prefer-switch-with-enums
    - prefer-test-matchers
    - prefer-typedefs-for-callbacks
    - prefer-unique-test-names
    - prefer-wildcard-pattern
    # Style
    - unnecessary-trailing-comma: false
